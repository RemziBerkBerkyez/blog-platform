# ==========================================
# NGINX REVERSE PROXY CONFIGURATION
# ==========================================

events {
    worker_connections 1024;        # Max eşzamanlı bağlantı
}

http {
    # ==========================================
    # UPSTREAM (Backend)
    # ==========================================
    upstream api_backend {
        server api:3000;            # Docker service name:port
        # Birden fazla instance olsaydı:
        # server api:3000;
        # server api:3001;
        # server api:3002;
    }

    # ==========================================
    # SERVER BLOCK
    # ==========================================
    server {
        listen 80;                  # HTTP port
        server_name localhost;      # Server adı

        # Access log
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # ==========================================
        # ROOT ENDPOINT
        # ==========================================
        location / {
            return 200 '{"message":"Blog Platform API","version":"1.0.0","endpoints":{"/api/posts":"Blog posts","/health":"Health check"}}';
            add_header Content-Type application/json;
        }

        # ==========================================
        # HEALTH CHECK
        # ==========================================
        location /health {
            proxy_pass http://api_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # ==========================================
        # API ROUTES
        # ==========================================
        location /api/ {
            # Reverse proxy to backend
            proxy_pass http://api_backend;
            
            # Proxy headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
        }

        # ==========================================
        # ERROR PAGES
        # ==========================================
        error_page 404 /404.json;
        location = /404.json {
            return 404 '{"error":"Not found"}';
            add_header Content-Type application/json;
        }

        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
            return 500 '{"error":"Server error"}';
            add_header Content-Type application/json;
        }
    }
}
